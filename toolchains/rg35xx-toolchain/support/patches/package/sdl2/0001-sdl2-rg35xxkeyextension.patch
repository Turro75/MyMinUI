diff -bur src/video/directfb/SDL_DirectFB_events.c ./SDL_DirectFB_events.c
--- a/src/video/directfb/SDL_DirectFB_events.c	2017-10-23 21:27:47.000000000 +0200
+++ b/src/video/directfb/SDL_DirectFB_events.c	2024-05-19 01:14:27.302971032 +0200
@@ -46,7 +46,7 @@
 #else
 #define SDL_SendMouseMotion_ex(w, id, relative, x, y, p) SDL_SendMouseMotion(w, id, relative, x, y)
 #define SDL_SendMouseButton_ex(w, id, state, button) SDL_SendMouseButton(w, id, state, button)
-#define SDL_SendKeyboardKey_ex(id, state, scancode) SDL_SendKeyboardKey(state, scancode)
+#define SDL_SendKeyboardKey_ex(id,  state, scancode) SDL_SendKeyboardKey( state, scancode)
 #define SDL_SendKeyboardText_ex(id, text) SDL_SendKeyboardText(text)
 #endif
 
@@ -66,6 +66,8 @@
                                          SDL_Keysym * keysym, Uint32 *unicode);
 static SDL_Keysym *DirectFB_TranslateKeyInputEvent(_THIS, DFBInputEvent * evt,
                                                    SDL_Keysym * keysym, Uint32 *unicode);
+static SDL_Keysym *DirectFB_myTranslateKeyInputEvent(_THIS, DFBInputEvent * evt,
+                                                   SDL_Keysym * keysym, Uint32 *unicode);
 
 static void DirectFB_InitOSKeymap(_THIS, SDL_Scancode * keypmap, int numkeys);
 static int DirectFB_TranslateButton(DFBInputDeviceButtonIdentifier button);
@@ -358,10 +360,11 @@
             }
             break;
         case DIET_KEYPRESS:
+            //SDL_Log("I'm in ProcessInputEvent KEYPRESS\n");
             kbd_idx = KbdIndex(_this, ievt->device_id);
-            DirectFB_TranslateKeyInputEvent(_this, ievt, &keysym, &unicode);
+            DirectFB_myTranslateKeyInputEvent(_this, ievt, &keysym, &unicode);
             /* printf("Scancode %d  %d %d\n", keysym.scancode, evt->key_code, evt->key_id); */
-            SDL_SendKeyboardKey_ex(kbd_idx, SDL_PRESSED, keysym.scancode);
+            SDL_SendKeyboardKey_ex(kbd_idx,SDL_PRESSED, keysym.scancode);
             if (SDL_EventState(SDL_TEXTINPUT, SDL_QUERY)) {
                 SDL_zero(text);
                 UnicodeToUtf8(unicode, text);
@@ -372,7 +375,7 @@
             break;
         case DIET_KEYRELEASE:
             kbd_idx = KbdIndex(_this, ievt->device_id);
-            DirectFB_TranslateKeyInputEvent(_this, ievt, &keysym, &unicode);
+            DirectFB_myTranslateKeyInputEvent(_this, ievt, &keysym, &unicode);
             SDL_SendKeyboardKey_ex(kbd_idx, SDL_RELEASED, keysym.scancode);
             break;
         case DIET_BUTTONPRESS:
@@ -566,6 +569,149 @@
 
 }
 
+static SDL_Keysym *DirectFB_myTranslateKeyInputEvent(_THIS, DFBInputEvent * evt,
+                                SDL_Keysym * keysym, Uint32 *unicode)
+{
+    keysym->scancode = SDL_SCANCODE_UNKNOWN;
+
+/*
+rg35xx
+CXXFLAGS += -DCMDR_KEY_RIGHT=SDLK_KATAKANAHIRAGANA
+CXXFLAGS += -DCMDR_KEY_DOWN=SDLK_HIRAGANA
+CXXFLAGS += -DCMDR_KEY_LEFT=SDLK_HENKAN
+CXXFLAGS += -DCMDR_KEY_OPEN=SDLK_MUHENKAN	# A
+CXXFLAGS += -DCMDR_KEY_PARENT=SDLK_KP_JPCOMMA		# B
+CXXFLAGS += -DCMDR_KEY_OPERATION=SDLK_KP_ENTER	# X
+CXXFLAGS += -DCMDR_KEY_SYSTEM=SDLK_RCTRL		# Y
+CXXFLAGS += -DCMDR_KEY_PAGEUP=SDLK_RALT		# L1 / L2 = SDLK_j
+CXXFLAGS += -DCMDR_KEY_PAGEDOWN=SDLK_BREAK		# R1 / R2 = SDLK_k
+CXXFLAGS += -DCMDR_KEY_SELECT=SDLK_PRINT		# SELECT
+CXXFLAGS += -DCMDR_KEY_TRANSFER=SDLK_KP_DIVIDE		# START
+CXXFLAGS += -DCMDR_KEY_MENU=SDLK_PAGEUP	# MENU (added)
+
+miyoomini
+#define CMDR_KEY_UP SDLK_UP   
+#define CMDR_KEY_RIGHT SDLK_RIGHT
+#define CMDR_KEY_DOWN SDLK_DOWN
+#define CMDR_KEY_LEFT SDLK_LEFT
+#define CMDR_KEY_SYSTEM SDLK_LALT   Y
+#define CMDR_KEY_PAGEUP SDLK_e      L1
+#define CMDR_KEY_PAGEDOWN SDLK_t    R1
+#define CMDR_KEY_OPEN SDLK_SPACE    A
+#define CMDR_KEY_PARENT SDLK_LCTRL   B
+#define CMDR_KEY_OPERATION SDLK_LSHIFT   X
+#define CMDR_KEY_SELECT SDLK_RCTRL      SELECT
+#define CMDR_KEY_TRANSFER SDLK_RETURN   START
+#define CMDR_KEY_MENU SDLK_ESCAPE       MENU
+
+from drastic for Miyoomini
+    SDLK_UP,            // UP
+    SDLK_DOWN,          // DOWN
+    SDLK_LEFT,          // LEFT
+    SDLK_RIGHT,         // RIGHT
+    SDLK_SPACE,         // A
+    SDLK_LCTRL,         // B
+    SDLK_LSHIFT,        // X
+    SDLK_LALT,          // Y
+    SDLK_e,             // L1
+    SDLK_t,             // R1
+    SDLK_TAB,           // L2
+    SDLK_BACKSPACE,     // R2
+    SDLK_RCTRL,         // SELECT
+    SDLK_RETURN,        // START
+    SDLK_HOME,          // MENU
+    SDLK_0,             // QUICK SAVE
+    SDLK_1,             // QUICK LOAD
+    SDLK_2,             // FAST FORWARD
+    SDLK_3,             // EXIT
+    SDLK_HOME,          // MENU (Onion system)
+*/
+   
+    // X
+     if (evt->key_code == 96 ) {
+       keysym->scancode = SDL_SCANCODE_LSHIFT;
+    }
+    //Y
+     if (evt->key_code == 97 ) {
+       keysym->scancode = SDL_SCANCODE_LALT;
+    }
+    //A
+     if (evt->key_code == 94 ) {
+       keysym->scancode = SDL_SCANCODE_SPACE;
+    }
+    //B
+     if (evt->key_code == 95 ) {
+       keysym->scancode = SDL_SCANCODE_LCTRL;
+    }
+    //VOLUME UP
+     if (evt->key_code == 108 ) {
+       keysym->scancode = SDL_SCANCODE_VOLUMEUP;
+    }
+    //VOLUME DOWN
+     if (evt->key_code == 109 ) {
+       keysym->scancode = SDL_SCANCODE_VOLUMEDOWN;
+    }
+    //POWER
+     if (evt->key_code == 116 ) {
+       keysym->scancode = SDL_SCANCODE_POWER;
+    }
+    //L1
+    if (evt->key_code == 100 ) {
+       keysym->scancode = SDL_SCANCODE_E;
+    }
+    //L2
+     if (evt->key_code == 102 ) {
+       keysym->scancode = SDL_SCANCODE_TAB;
+    }
+    //R1
+     if (evt->key_code == 101 ) {
+       keysym->scancode = SDL_SCANCODE_RCTRL;
+    }
+    //R2
+     if (evt->key_code == 103 ) {
+       keysym->scancode = SDL_SCANCODE_BACKSPACE;
+     }
+      //UP
+    if (evt->key_code == 90 ) {
+       keysym->scancode = SDL_SCANCODE_UP;
+    }
+    //DOWN
+     if (evt->key_code == 91 ) {
+       keysym->scancode = SDL_SCANCODE_DOWN;
+       //keysym->scancode = SDL_SCANCODE_LANG4;
+    }
+    //LEFT
+     if (evt->key_code == 92 ) {
+       keysym->scancode = SDL_SCANCODE_LEFT;
+       //keysym->scancode = SDL_SCANCODE_INTERNATIONAL4;
+    }
+    //RIGHT
+     if (evt->key_code == 93 ) {
+       keysym->scancode = SDL_SCANCODE_RIGHT;
+       //keysym->scancode = SDL_SCANCODE_INTERNATIONAL2;
+    }
+    //START
+    if (evt->key_code == 98 ) {
+       keysym->scancode = SDL_SCANCODE_RETURN;
+    }
+    //SELECT
+     if (evt->key_code == 99 ) {
+       keysym->scancode = SDL_SCANCODE_ESCAPE;
+    }
+    //MENU
+     if (evt->key_code == 104 ) {
+       keysym->scancode = SDL_SCANCODE_MENU;
+    }
+    
+     *unicode =
+        (DFB_KEY_TYPE(evt->key_symbol) == DIKT_UNICODE) ? evt->key_symbol : 0;
+    if (*unicode == 0 &&
+        (evt->key_symbol > 0 && evt->key_symbol < 255))
+        *unicode = evt->key_symbol;
+    return keysym;
+}
+
+
 static SDL_Keysym *DirectFB_TranslateKeyInputEvent(_THIS, DFBInputEvent * evt,
                                SDL_Keysym * keysym, Uint32 *unicode)
 {    
