diff --git a/Makefile.my282 b/Makefile.my282
new file mode 100644
index 0000000000..b0659b738c
--- /dev/null
+++ b/Makefile.my282
@@ -0,0 +1,71 @@
+# This build was put together and is maintained by ModMyClassic.com for Libretro.
+# The purpose is to give Libretro a proper "official" build platform for classic consoles.
+# If you need any help in building for the classics or have any questions then please visit
+# https://modmyclassic.com and we will help in any way possible!
+
+# INFO: THIS BUILD TARGET ALSO COVERS THE NESC!!!
+
+# Building Prerequisites ##############
+# arm-linux-gnueabihf-strip
+# patchelf
+
+include version.all
+
+# General Shared Variables ############
+TARGET := retroarch
+
+# Libretro Defines ####################
+#HAVE_CLASSIC = Classic Hook, disable some features
+#HAVE_C_A7A7 = Classic Armv7 Cortex A7 optimisation override
+#HAVE_HAKCHI = Hakchi Hook, change default configurations etc (TODO)
+
+all: $(TARGET)
+
+retroarch:
+	#Build the RetroArch Binary for cross platform classics (ARMv7 Cortex A7)
+	patchelf --version #Check if you have patchelf installed... (sudo apt-get install patchelf)
+	rm -rf obj-unix
+	rm -f *.d
+	rm -f *.o
+	rm -f audio/*.o
+	rm -f conf/*.o
+	rm -f gfx/*.o
+	rm -f gfx/drivers_font/*.o
+	rm -f gfx/drivers_font_renderer/*.o
+	rm -f gfx/drivers_context/*.o
+	rm -f gfx/py_state/*.o
+	rm -f compat/*.o
+	rm -f record/*.o
+	rm -f input/*.o
+	rm -f tools/*.o
+	rm -f $(BINDIR)/retroarch
+	rm -f $(PNDDIR)/readme.html
+	rm -f retroarch
+	if [ -f $(PREFIX)/lib/pkgconfig/fontconfig.pc ]; then mv $(PREFIX)/lib/pkgconfig/fontconfig.pc $(PREFIX)/lib/pkgconfig/fontconfig.pc_ ; fi
+	CFLAGS=" $(MYARCH)" LD_LIBRARY_PATH=/opt/r36s-toolchain/usr/lib PKG_CONF_PATH=/opt/r36s-toolchain/usr/bin/pkg-config PKG_CONFIG_PATH=$(PREFIX)/lib/pkgconfig ./configure --host=arm-buildroot-linux-gnueabihf  --disable-ozone --disable-xmb --disable-parport --enable-sdl  --disable-online_updater --disable-stb_font --disable-ssl --disable-wayland --disable-vulkan --disable-x11 --disable-oss --disable-opengl --disable-opengl1 --enable-opengl_core --enable-mali_fbdev --enable-freetype  --enable-opengles --disable-pulse --enable-alsa --disable-tinyalsa --enable-neon --disable-freetype --enable-floathard --disable-discord
+	make V=0 -j4 #Cook it
+	$(CROSS_COMPILE)strip -v retroarch
+	if [ -f $(PREFIX)/lib/pkgconfig/fontconfig.pc_ ]; then mv $(PREFIX)/lib/pkgconfig/fontconfig.pc_ $(PREFIX)/lib/pkgconfig/fontconfig.pc ; fi
+	#patchelf --replace-needed libSDL2-2.0.so.0 libSDL2.so retroarch #libSDL2-2.0.so.0 sym link doesn't exist on native build. Just patch the binary...
+	@echo "*********************************************************************"
+	@echo "***     NES/SNES Classic RetroArch binary built successfully!     ***"
+	@echo "*********************************************************************"
+clean:
+	rm -rf obj-unix
+	rm -f *.d
+	rm -f *.o
+	rm -f audio/*.o
+	rm -f conf/*.o
+	rm -f gfx/*.o
+	rm -f gfx/drivers_font/*.o
+	rm -f gfx/drivers_font_renderer/*.o
+	rm -f gfx/drivers_context/*.o
+	rm -f gfx/py_state/*.o
+	rm -f compat/*.o
+	rm -f record/*.o
+	rm -f input/*.o
+	rm -f tools/*.o
+	rm -f $(BINDIR)/retroarch
+	rm -f $(PNDDIR)/readme.html
+	rm -f retroarch
+
diff --git a/input/drivers_joypad/sdl_joypad.c b/input/drivers_joypad/sdl_joypad.c
index fb9c78ef82..134d1db544 100644
--- a/input/drivers_joypad/sdl_joypad.c
+++ b/input/drivers_joypad/sdl_joypad.c
@@ -270,6 +270,18 @@ static void *sdl_joypad_init(void *data)
 #endif
    uint32_t sdl_subsystem_flags = SDL_WasInit(0);
 
+//to let events running even if gfx driver is not sdl/sdl2
+  SDL_Init(SDL_INIT_VIDEO);
+#ifdef HAVE_SDL2
+      SDL_Window *screen = SDL_CreateWindow("My Game Window",
+                          SDL_WINDOWPOS_UNDEFINED,
+                          SDL_WINDOWPOS_UNDEFINED,
+                          640, 480,
+                          SDL_WINDOW_FULLSCREEN);
+#else
+    SDL_SetVideoMode (640, 480, 8, 0);
+#endif
+
    /* Initialise joystick/controller subsystem, if required */
    if (sdl_subsystem_flags == 0)
    {
